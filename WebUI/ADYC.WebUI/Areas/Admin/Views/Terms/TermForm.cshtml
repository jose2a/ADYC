@model ADYC.WebUI.ViewModels.TermFormViewModel

@{
    ViewBag.Title = Model.Title;
    ViewBag.PageHeader = Model.Title;

    ViewBag.BreadcrumbLinks = new Dictionary<string, string>
    {
        ["Terms"] = Url.Action("Index"),
        [Model.Title] = "",
    };

    ViewBag.ActiveBreadcrumb = Model.Title;
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

@using (Html.BeginForm("Save", "Terms", FormMethod.Post))
{
    <div class="box box-primary">

        <div class="box-body">

            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.IsNew)

            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "Please fix the following errors:", new { @class = "text-red" })

            <div class="form-group">
                @Html.LabelFor(m => m.Name)

                @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-red" })

            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.StartDate)

                @Html.EditorFor(m => m.StartDate, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-red" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.EndDate)

                @Html.EditorFor(m => m.EndDate, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-red" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.EnrollmentDeadLine)

                @Html.EditorFor(m => m.EnrollmentDeadLine, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(m => m.EnrollmentDeadLine, "", new { @class = "text-red" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.EnrollmentDropDeadLine)

                @Html.EditorFor(m => m.EnrollmentDropDeadLine, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(m => m.EnrollmentDropDeadLine, "", new { @class = "text-red" })
            </div>

            <div class="form-group">
                <label>
                    @Html.CheckBoxFor(m => m.IsCurrentTerm) Current Term?
                </label>
            </div>
        </div>

        <div class="box-footer">
            <a href="@Url.Action("Index")" class="btn btn-default">Cancel</a>
            <button class="btn btn-primary" type="submit">Save</button>
        </div>

    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {

            var startDate = $("#StartDate");
            var endDate = $("#EndDate");

            var enrollmentDeadLine = $("#EnrollmentDeadLine");
            var enrollmentDropDeadLine = $("#EnrollmentDropDeadLine");

            startDate.datepicker({
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 2
            })
            .on("change", function () {
                var thisDate = getDate(this);
                thisDate.setDate(thisDate.getDate() + 1);

                endDate.datepicker("option", "minDate", thisDate);
                enrollmentDeadLine.datepicker("option", "minDate", thisDate);
                enrollmentDropDeadLine.datepicker("option", "minDate", thisDate);

                enrollmentDeadLine.val("");
                enrollmentDropDeadLine.val("");
            });

            endDate.datepicker({
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 2
            })
            .on("change", function () {
                startDate.datepicker("option", "maxDate", getDate(this));
                enrollmentDeadLine.datepicker("option", "maxDate", getDate(this));
                enrollmentDropDeadLine.datepicker("option", "maxDate", getDate(this));

                enrollmentDeadLine.val("");
                enrollmentDropDeadLine.val("");
            });

            enrollmentDeadLine.datepicker({
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 2
            })
            .on("change", function () {
                enrollmentDropDeadLine.datepicker("option", "minDate", getDate(this));
            });

            enrollmentDropDeadLine.datepicker({
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 2
            })
            .on("change", function () {
                enrollmentDeadLine.datepicker("option", "maxDate", getDate(this));
            });

            var dateFormat = "mm/dd/yy";

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate(dateFormat, element.value);
                } catch (error) {
                    date = null;
                }

                return date;
            }
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
}