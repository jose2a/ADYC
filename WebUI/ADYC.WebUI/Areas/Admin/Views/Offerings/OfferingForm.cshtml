@model ADYC.WebUI.ViewModels.OfferingFormViewModel

@{
    ViewBag.Title = Model.FormTitle;
}

<h1>@Model.FormTitle</h1>

@if (!Model.IsCurrentTerm)
{
    <div class="alert alert-info" role="alert">
        This term is not the current term, you are not allowed to make changes at this time.
    </div>
}

@using (Html.BeginForm("Save", "Offerings", FormMethod.Post))
{

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.TermId)
    @Html.HiddenFor(model => model.IsNew)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "Please fix the following errors:", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.IsCurrentTerm)
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.IsCurrentTerm)
                {
                    @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.Courses, "Id", ""), "Select Course", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.CourseId, new SelectList(Model.Courses, "Id", ""), "Select Course", new { @class = "form-control", disabled = "disabled" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfessorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.IsCurrentTerm)
                {
                    @Html.DropDownListFor(m => m.ProfessorId, new SelectList(Model.Professors, "Id", ""), "Select Professor", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProfessorId, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownListFor(m => m.ProfessorId, new SelectList(Model.Professors, "Id", ""), "Select Professor", new { @class = "form-control", disabled = "disabled" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TermId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TermId, new SelectList(Model.Terms, "Id", "Name"), new { @class = "form-control", @disabled = "disable" })
                @Html.ValidationMessageFor(model => model.TermId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.IsCurrentTerm)
                {
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OfferingDays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OfferingDays, new { htmlAttributes = new { @class = "form-control", @disabled = "disable" } })
                @Html.ValidationMessageFor(model => model.OfferingDays, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.IsCurrentTerm)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
}

<div>
    @Html.ActionLink("Back to list of terms", "View", new { TermId = Model.TermId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}